{
	"info": {
		"_postman_id": "8560b2da-ab54-4b0a-b864-acb37f579211",
		"name": "Week 8 - GitHub GraphQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43082776"
	},
	"item": [
		{
			"name": "Get User Info GraphQL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Данные пользователя получены\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   pm.expect(jsonData.data.viewer.login).to.be.a(\"string\");\r",
							"   pm.expect(jsonData.data.viewer.name).to.be.a(\"string\");\r",
							"});\r",
							"pm.test(\"Нет ошибок в ответе\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   pm.expect(jsonData.errors).to.be.undefined;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{github_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n viewer {\r\n   login\r\n   name\r\n   email\r\n }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{github_graphql_url}}",
					"host": [
						"{{github_graphql_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Repositories",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Список репозиториев получен\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.viewer.repositories.nodes).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{github_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\r\n viewer {\r\n   login\r\n   repositories(first: 5) {\r\n     nodes {\r\n       name\r\n       description\r\n       stargazerCount\r\n     }\r\n   }\r\n }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{github_graphql_url}}",
					"host": [
						"{{github_graphql_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Repository by Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Репозиторий найден\", function () {\r",
							"   var jsonData = pm.response.json();\r",
							"   pm.expect(jsonData.data.viewer.repository.name).to.eql(\"repo1\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($repoName: String!) {\r\n viewer {\r\n   repository(name: $repoName) {\r\n     name\r\n     description\r\n     stargazerCount\r\n   }\r\n }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{github_graphql_url}}",
					"host": [
						"{{github_graphql_url}}"
					]
				}
			},
			"response": []
		}
	]
}